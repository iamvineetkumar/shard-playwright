name: Playwright Tests

on:
  push:
    branches: [dev2]
  workflow_dispatch:
    inputs:
      testTag:
        description: 'Select the type of tests to run'
        required: true
        type: choice
        options:
          - sanity
          - smoke
          - e2eFrontEnd
        default: 'sanity'  # Default tag

jobs:
  read-shard-index:
    runs-on: ubuntu-latest
    outputs:
      shardIndexJson: ${{ steps.set-shard-index.outputs.shardIndexJson }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq
        run: sudo apt-get install -y yq

      - name: Read shardIndex from YAML
        id: set-shard-index
        run: |
          testTag="${{ github.event.inputs.testTag }}"
          if [ "$testTag" == "sanity" ]; then
            shardIndex=$(yq eval '.shardIndex[0][]' .github/workflows/sanity.yml)
          elif [ "$testTag" == "smoke" ]; then
            shardIndex=$(yq eval '.shardIndex[0][]' .github/workflows/smoke.yml)
          elif [ "$testTag" == "e2eFrontEnd" ]; then
            shardIndex=$(yq eval '.shardIndex[0][]' .github/workflows/shard.yml)
          else
            echo "Invalid testTag specified."
            exit 1
          fi
          shardIndexJson=$(echo $shardIndex | jq -R -s -c 'split(" ")')
          echo "::set-output name=shardIndexJson::$shardIndexJson"

  playwright-tests:
    needs: read-shard-index
    timeout-minutes: 2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: ${{ fromJSON(needs.read-shard-index.outputs.shardIndexJson) }}
        shardTotal: [4]  # Number of total shards
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Install yq and jq
        run: |
          npm install js-yaml
          sudo apt-get install -y yq jq

      - name: Print test file content
        run: |
          if [ "${{ github.event.inputs.testTag }}" == "sanity" ]; then
            cat .github/workflows/sanity.yml
          elif [ "${{ github.event.inputs.testTag }}" == "smoke" ]; then
            cat .github/workflows/smoke.yml
          elif [ "${{ github.event.inputs.testTag }}" == "e2eFrontEnd" ]; then
            cat .github/workflows/shard.yml
          else
            echo "Invalid testTag specified."
            exit 1

      - name: Read tests based on shardIndex
        id: read_tests
        run: |
          testTag="${{ github.event.inputs.testTag }}"
          shardIndex="${{ matrix.shardIndex }}"
          if [ "$testTag" == "sanity" ]; then
            tests=$(yq eval ".shards[$shardIndex].tests | .[]" .github/workflows/sanity.yml)
          elif [ "$testTag" == "smoke" ]; then
            tests=$(yq eval ".shards[$shardIndex].tests | .[]" .github/workflows/smoke.yml)
          elif [ "$testTag" == "e2eFrontEnd" ]; then
            tests=$(yq eval ".shards[$shardIndex].tests | .[]" .github/workflows/shard.yml)
          else
            echo "Invalid testTag specified."
            exit 1
          fi
          echo "::set-output name=tests::$tests"

      - name: Debug tests
        run: |
          echo "Raw YAML output:"
          echo "${{ steps.read_tests.outputs.tests }}"
          tests="${{ steps.read_tests.outputs.tests }}"
          echo "Tests are: $tests"

      - name: Run tests
        run: |
          tests="${{ steps.read_tests.outputs.tests }}"
          tests=$(echo "$tests" | tr '\n' ' ')
          echo "Running tests: $tests"
          npx playwright test $tests --workers=4

      - name: Upload blob report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1
